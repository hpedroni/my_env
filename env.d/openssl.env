#
# shellcheck disable=SC2148

getcerts () {
  _URL="$1"
  [ -z "$_URL" ] && echo "usage: getcerts <URL>" && return 1

  echo | openssl s_client -showcerts -connect "$_URL" -servername "${_URL%:*}" | perl -e '
    my $cert_counter = 1;
    my $cert_data    = "";
    my $in_cert      = 0;
    my $url          = "'${_URL%:*}'";

    while (<>){
      $in_cert = 1 if (/-----BEGIN CERTIFICATE-----/);
      $cert_data .= $_ if ($in_cert);
      if (/-----END CERTIFICATE-----/){
        $in_cert = 0;
        open(FH, ">$url.cert$cert_counter");
        printf FH $cert_data;
        $cert_data = "";
        $cert_counter ++;
      }
      print $_
    }
  '
}

# Certificate details
certdetails () {
  certificate="$1"; shift
  params="$*"

  [ "$params" == "help" ] && echo -e "Params:\n-subject\n-dates\n-issuer\n-serial\n" && return 1
  [ -z "$params" ] && params="-text"

  _cert_type=""
  if [ -n "$certificate" ]; then
    [ "$(file -b "$certificate")" == "data" ] && _cert_type="-inform DER"
    eval openssl x509 -noout "$_cert_type" -in "$certificate" "$params"
  else
    perl -ne '
      @a=split(/|/);
      printf "-----BEGIN CERTIFICATE-----\n";
      $i=0; for (@a) {
        printf "$_";
        $i++;
        if ($i==64) {
          $i=0; printf "\n"
        }
      }
      printf "-----END CERTIFICATE-----\n";
    ' | openssl x509 -noout -in /dev/stdin "$params"
  fi
}


# compare certificate/key pair if they match
certkeypair () {
    [[ -z "$1" || -z "$2" ]] && echo "usage: certkeypair <cert file> <key file>" && return 1

    # for 256 colors
    export TERM=xterm-256color

    echo
    echo "Input files"
    echo "  Cert: $1"
    echo "   Key: $2"

    cert_hash="$(openssl x509 -in "$1" -pubkey -noout -outform pem | sha256sum)"
    key_hash="$(openssl pkey -in "$2" -pubout -outform pem | sha256sum)"

    echo
    echo "Hashes"
    echo "  Cert: $cert_hash"
    echo "   Key: $key_hash"

    echo
    echo "Result"
    if [ "$cert_hash" = "$key_hash" ]; then
        echo "    Cert/Key pair $(tput setaf 10)MATCH$(tput setaf 7)"
    else
        echo "    Cert/Key pair $(tput setaf 9)DOESN'T MATCH$(tput setaf 7)"
    fi
    echo
}